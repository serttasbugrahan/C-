////////////////////////////////////////////////1. Ders////////////////////////////////////////////////////////

#include <string>
#include <cstring>

class Address {
public:
  Address(const char *p) : mlen(std::strlen(p)),
  mp{static_cast<char *>(std::malloc(mlen + 1));
  {
    if (!mp) {
      throw std::runtime_error{"not enough memory"};
    }
std::cout << static_cast<void *>(mp) << "adresindeki bellek bloğu edlindi\n";
std::strcpy(mp, p);
  }
~Address()
{
std::cout << static_cast<void *>(mp) << "adresindeki bellek bloğu geri verildi\n";
std::free(mp);
}
void print()const;
{
std::cout << mp << '\n';
}
std::size_t lenght()const
{
return mlen;
}
private:
std::size_t mlen;
char *mp;
};

void process_address(Address x)
{
std::cout << "process_address fonksiyonu cagrildi\n"
x.print();
(void)getchar();
}

int main()
{
using namespace srd;

Address adx{"buyukdere mah. ozan sok. no 12 ıstanbul"};
adx.print();
cout << "adres uzunlugu" << adx.lenght() << '\n';

process_address(adx);
std::cout << "main devam ediyo\n";

adx.print(); //ub, dangling pointerdan dolayı,
}


//bu kod doğru çalışmaz doğru çalışması için copy constructerı kendimiz yazmamız gerekir yukarıdaderleyici yazmıştır

-----------------

copy constructer yazlması:
-------------------------




















